services:
  nginx:
    image: nginx:1.25.3
    container_name: nginx
    env_file:
      - .env
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./nginx/conf.d.prod:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/usr/share/nginx/html
      - ./letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot 
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
    depends_on:
      - permission-engine-api
    networks:
      - permission_engine_network

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    env_file:
      - .env
    command: certbot certonly --webroot --webroot-path=/var/www/certbot --email $EMAIL_CERTIFICATOR --agree-tos --no-eff-email -d engine.permissioning.city
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $!; certbot renew; done'"
    networks:
      - permission_engine_network
  
  redis:
    image: redis:7.2.5
    container_name: redis
    volumes:
      - ./data/redis:/data
    env_file:
      - .env
    networks:
      - permission_engine_network

  postgres:
    image: postgres:15
    container_name: postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    networks:
      - permission_engine_network

  permission-engine-api:
    build:
      context: ./permission-engine
    container_name: permission-engine-api
    env_file:
      - .env
    environment:
      - ENGINE_MODE=api
    volumes:
      - ./logs/permission-engine-api:/app/log
      - ./permission-engine:/app
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - postgres
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      start_interval: 5s
    networks:
      - permission_engine_network

  permission-engine-daemon:
    build:
      context: ./permission-engine
    container_name: permission-engine-daemon
    env_file:
      - .env
    environment:
      - ENGINE_MODE=daemon
      - DAEMONS=notification-handler,permission-handler
    volumes:
      - ./logs/permission-engine-daemon:/app/log
      - ./permission-engine:/app
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - postgres
      - redis
      - permission-engine-api
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      start_interval: 5s
    networks:
      - permission_engine_network

  ptc-dashboard:
    build:
      context: ./ptc-dashboard
    container_name: ptc-dashboard
    env_file:
      - .env
    volumes:
      - ./ptc-dashboard:/app
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - permission-engine-api
    restart: always
    networks:
      - permission_engine_network

networks:
  permission_engine_network:
    driver: bridge
